[{"/home/italo/projetos/questionario/src/index.js":"1","/home/italo/projetos/questionario/src/app/store.js":"2","/home/italo/projetos/questionario/src/Pages/Formulary/Formulary.js":"3","/home/italo/projetos/questionario/src/Pages/Formulary/styles.js":"4","/home/italo/projetos/questionario/src/Themes/Global_Styles.js":"5","/home/italo/projetos/questionario/src/Themes/Themes.js":"6","/home/italo/projetos/questionario/src/Pages/ThemeChoose/ThemeChoose.js":"7","/home/italo/projetos/questionario/src/Pages/ThemeChoose/styles.js":"8","/home/italo/projetos/questionario/src/Components/Input/Input.js":"9","/home/italo/projetos/questionario/src/Routes/Routes.js":"10","/home/italo/projetos/questionario/src/Pages/ColorChoose/ColorChoose.js":"11","/home/italo/projetos/questionario/src/Pages/ColorChoose/styles.js":"12","/home/italo/projetos/questionario/src/Pages/AccuracyQuestions/AccuracyQuestions.js":"13","/home/italo/projetos/questionario/src/Pages/AccuracyQuestions/styles.js":"14","/home/italo/projetos/questionario/src/Pages/QualitativeQuestions/QualitativeQuestions.js":"15","/home/italo/projetos/questionario/src/Pages/QualitativeQuestions/styles.js":"16","/home/italo/projetos/questionario/src/Store/index.js":"17","/home/italo/projetos/questionario/src/Components/Select/Select.js":"18"},{"size":1541,"mtime":1613353896901,"results":"19","hashOfConfig":"20"},{"size":206,"mtime":1612275925690,"results":"21","hashOfConfig":"20"},{"size":3716,"mtime":1613525889731,"results":"22","hashOfConfig":"20"},{"size":811,"mtime":1613164847191,"results":"23","hashOfConfig":"20"},{"size":2653,"mtime":1613522046880,"results":"24","hashOfConfig":"20"},{"size":399,"mtime":1613417954686,"results":"25","hashOfConfig":"20"},{"size":2051,"mtime":1613416330628,"results":"26","hashOfConfig":"20"},{"size":1803,"mtime":1613165038592,"results":"27","hashOfConfig":"20"},{"size":565,"mtime":1613522465483,"results":"28","hashOfConfig":"20"},{"size":519,"mtime":1612526663834,"results":"29","hashOfConfig":"20"},{"size":4074,"mtime":1613478684433,"results":"30","hashOfConfig":"20"},{"size":2036,"mtime":1613478485985,"results":"31","hashOfConfig":"20"},{"size":2773,"mtime":1613479494037,"results":"32","hashOfConfig":"20"},{"size":2464,"mtime":1613520341137,"results":"33","hashOfConfig":"20"},{"size":7046,"mtime":1613481507013,"results":"34","hashOfConfig":"20"},{"size":3801,"mtime":1613482115275,"results":"35","hashOfConfig":"20"},{"size":440,"mtime":1613414915681,"results":"36","hashOfConfig":"20"},{"size":419,"mtime":1613415574694,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"145czvk",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/italo/projetos/questionario/src/index.js",[],["82","83"],"/home/italo/projetos/questionario/src/app/store.js",[],["84","85"],"/home/italo/projetos/questionario/src/Pages/Formulary/Formulary.js",["86","87","88","89","90"],"/home/italo/projetos/questionario/src/Pages/Formulary/styles.js",[],"/home/italo/projetos/questionario/src/Themes/Global_Styles.js",[],"/home/italo/projetos/questionario/src/Themes/Themes.js",[],"/home/italo/projetos/questionario/src/Pages/ThemeChoose/ThemeChoose.js",["91","92","93","94","95","96","97"],"import React, { useState } from 'react';\nimport {GlobalStyled} from '../../Themes/Global_Styles'\nimport {ThemeProvider} from 'styled-components';\nimport { lightTheme, darkTheme } from '../../Themes/Themes.js'\nimport { Container ,Title, Button_light_theme, Button_dark_theme,Container_change , Mapa, Container_button, Container_global} from './styles';\nimport { Link } from 'react-router-dom';\n\nimport {useSelector, useDispatch} from 'react-redux';\n\n\n function ThemeChoose(props){\n\n    const reduxDarkTheme = useSelector(state => state.DARK_THEME);\n    const dispatch = useDispatch();\n\n    return(\n        \n        <ThemeProvider theme={reduxDarkTheme ? darkTheme : lightTheme}>\n\n                <Container_global>\n\n                    <GlobalStyled/>\n\n                    <Title>Para observar um mapa, vocÃª prefere o fundo de tela...</Title>\n\n                    <Mapa/>\n\n                    <Container_change >\n\n                        <Button_light_theme \n                            selected={!reduxDarkTheme}\n                            theme={lightTheme}\n                            onClick={()=>{dispatch({\n                                type: 'DARK_THEME',\n                                payload: false,\n                            \n                            })}}\n                            /> \n\n                        <Button_dark_theme \n                            selected={reduxDarkTheme}\n                            theme={darkTheme}\n                            onClick={()=>{dispatch({\n                                type: 'DARK_THEME',\n                                payload: true,\n                            \n                            })}}\n                            />\n                    </Container_change>\n\n                    <Container_button>\n                        <Link to='/color'>\n                                <button>continuar</button>\n                        </Link>\n                    </Container_button>\n\n                </Container_global>\n\n        </ThemeProvider>\n    )\n}\n\nexport default ThemeChoose;","/home/italo/projetos/questionario/src/Pages/ThemeChoose/styles.js",[],"/home/italo/projetos/questionario/src/Components/Input/Input.js",["98"],"import React from 'react';\n\n function Input(props){\n\n    return(\n\n        <>\n            <h5>{props.label}</h5>\n            <input\n    \n            onChange={props.onChange}\n            onBlur={props.onBlur}\n            value={props.value}\n            \n            /> \n            <span>Por favor preencha este campo</span>\n        </>  \n    )\n}\n\n{/* <Input\nlabel={'idade:'}\nonChange={formik.handleChange}\nonBlur={formik.handleBlur}\nvalue={formik.values.idade}\nformkikTouched={formik.touched.idade}\nformikErrors={formik.errors.idade}\n\n/> */}\n\n\nexport default Input;","/home/italo/projetos/questionario/src/Routes/Routes.js",["99","100"],"/home/italo/projetos/questionario/src/Pages/ColorChoose/ColorChoose.js",["101","102","103","104","105","106","107","108","109"],"import React, { useState } from 'react';\nimport {GlobalStyled} from '../../Themes/Global_Styles'\nimport {ThemeProvider} from 'styled-components';\nimport { lightTheme, darkTheme } from '../../Themes/Themes.js'\nimport {  Title,Container_change , Mapa, Color_scheme, Row, Color,Container_text,Container_global, Container_button} from './styles';\nimport { Link } from 'react-router-dom';\n\nimport {useSelector, useDispatch} from 'react-redux';\n\n function ColorChoose(props){\n\n    const reduxDarkTheme = useSelector(state => state.DARK_THEME);\n    const [theme, setTheme] = useState(reduxDarkTheme ? darkTheme : lightTheme);\n    const [scheme1, setScheme1] = useState(false)\n    const [scheme2, setScheme2] = useState(false)\n    const [scheme3, setScheme3] = useState(false)\n\n    function chooseScheme(scheme){\n        setScheme1(false)\n        setScheme2(false)\n        setScheme3(false)\n        if(scheme === 1 )  setScheme1(true) ;\n        if(scheme === 2 )  setScheme2(true) ;\n        if(scheme === 3 )  setScheme3(true) ;\n    }\n\n    return(\n        \n        <ThemeProvider theme={theme}>\n\n            <div className='App'>\n                <GlobalStyled/>\n\n                <Container_global >\n                   \n                <Title>Qual esquema de cores voce considera o melhor para ver no mapa?</Title>\n\n                <Mapa/>\n\n                {console.log(theme)}\n\n                <Container_change>\n                     <Color_scheme  \n                        theme={theme} \n                        selected={scheme1} onClick={() => chooseScheme(1)}> \n                       \n                        <Row>\n                            <Color color={\"#ADFF36\"}/>\n                            <Color color={\"#4275FF\"}/>                            \n                            <Color color={\"#FFEE28\"}/>\n                        </Row>\n\n                        <Row>\n                            <Color color={\"#D20FFF\"}/>\n                            <Color color={\"#FFBE1C\"}/>                            \n                            <Color color={\"#FF881C\"}/>  \n                        </Row>\n                    </Color_scheme>\n\n                    <Color_scheme\n                        theme={theme} \n                        selected={scheme2} onClick={() => chooseScheme(2)}> \n                        <Row>\n                            <Color color={\"#FFDE36\"}/>\n                            <Color color={\"#9D42FF\"}/>                            \n                            <Color color={\"#FFED29\"}/>\n                        </Row>\n\n                        <Row>\n                            <Color color={\"#6259FF\"}/>\n                            <Color color={\"#FFFE1C\"}/>                            \n                            <Color color={\"#FFAAAC\"}/>  \n                        </Row>\n                    </Color_scheme >\n\n                    <Color_scheme\n                        theme={theme} \n                        selected={scheme3} onClick={() => chooseScheme(3)}> \n                        <Row>\n                            <Color color={\"#91F6FF\"}/>\n                            <Color color={\"#6FFF8F\"}/>                            \n                            <Color color={\"#FFED29\"}/>\n                        </Row>\n\n                        <Row>\n                            <Color color={\"#FFB480\"}/>\n                            <Color color={\"#FF1C37\"}/>                            \n                            <Color color={\"#CCCAAC\"}/>  \n                        </Row>\n                    </Color_scheme>\n\n                </Container_change>\n\n\n                <Container_text>\n\n                    <h4>1</h4>\n                    <h4>2</h4>\n                    <h4>3</h4>\n\n                    \n                </Container_text>\n\n                <Container_button>\n\n                    <Link to='/questao_1'>\n                            <button>continuar</button>\n                    </Link>\n\n                </Container_button>\n   \n\n\n                </Container_global>\n\n\n            </div>\n\n\n        </ThemeProvider>\n    )\n}\n\nexport default ColorChoose;","/home/italo/projetos/questionario/src/Pages/ColorChoose/styles.js",[],"/home/italo/projetos/questionario/src/Pages/AccuracyQuestions/AccuracyQuestions.js",["110","111","112","113","114","115","116"],"import React, { useState } from 'react';\nimport {GlobalStyled} from '../../Themes/Global_Styles'\nimport {ThemeProvider} from 'styled-components';\nimport { lightTheme, darkTheme } from '../../Themes/Themes.js'\nimport {  Title , Mapa ,Question,Container_questions,Container_2_questions, Container_global, Container_button} from './styles';\nimport { Link } from 'react-router-dom';\n\nimport {useSelector, useDispatch} from 'react-redux';\n\n function AccuracyQuestions(props){\n\n    const reduxDarkTheme = useSelector(state => state.DARK_THEME);\n    const [theme, setTheme] = useState(reduxDarkTheme ? darkTheme : lightTheme);\n    const [alternatives, setAlternatives] = useState([false,false,false,false,false])\n \n    const dispatch = useDispatch();\n\n    function select(alternative){\n        switch (alternative) {\n            case 0: setAlternatives([true,false,false,false]); break;\n            case 1: setAlternatives([false,true,false,false]); break;\n            case 2: setAlternatives([false,false,true,false]); break;\n            case 3: setAlternatives([false,false,false,true]); break;\n        \n            default:break;\n        }\n    }\n\n\n\n    return(\n        \n        <ThemeProvider theme={theme}>\n\n            <Container_global>\n                <GlobalStyled/>\n           \n                <Title>Observando o mapa Ã© possÃ­vel notar que ele...</Title>\n\n                <Mapa/>\n\n                <Container_questions theme={theme}>\n\n                <Container_2_questions>\n                    <Question onClick={()=>select(0)} selected={alternatives[0]} theme={theme}> \n                        a) Retrata fielmente uma regiÃ£o geogrÃ¡fica brasileira\n                    </Question>\n\n                    <Question onClick={()=>select(1)} selected={alternatives[1]} theme={theme}> \n                        b) Exibe dados quantitativos atravÃ©s de uma regiao geogrÃ¡fica\n                    </Question>\n\n                </Container_2_questions>\n\n\n                <Container_2_questions>\n\n                    <Question onClick={()=>select(2)} selected={alternatives[2]} theme={theme}>\n                        c) Retrata a distinÃ§Ã£o entre duas regioes geogrÃ¡ficas\n                    </Question>\n\n                    <Question onClick={()=>select(3)} selected={alternatives[3]} theme={theme}>\n                        d) NÃ£o consigo responder a essa questÃ£o\n                    </Question>\n\n                </Container_2_questions>\n\n                </Container_questions>\n\n                <Container_button>\n\n                    <Link to='/questao_2'>\n                        <button>Continuar</button>\n                    </Link>\n\n                </Container_button>\n\n            </Container_global>\n\n        </ThemeProvider>\n    )\n}\n\nexport default AccuracyQuestions;","/home/italo/projetos/questionario/src/Pages/AccuracyQuestions/styles.js",[],"/home/italo/projetos/questionario/src/Pages/QualitativeQuestions/QualitativeQuestions.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"import React, { useState } from 'react';\nimport {GlobalStyled} from '../../Themes/Global_Styles'\nimport {ThemeProvider} from 'styled-components';\nimport { lightTheme, darkTheme } from '../../Themes/Themes.js'\nimport { \n    Container_button,\n    Container_global,\n    Title, \n    Emoji_hated , \n    Mapa ,\n    Question,\n    Container_questions,\n    Container_emojis,\n    Emoji_ok,\n    Emoji_didnt_enjoyed,\n    Emoji_enjoyed,\n    Emoji_really_enjoyed,\n\n} from './styles';\n\nimport { Link } from 'react-router-dom';\nimport teste  from '../../Images/hated.png'\nimport { useSelector } from 'react-redux';\n\n function QualitativeQuestions(props){\n\n    const reduxDarkTheme = useSelector(state => state.DARK_THEME);\n    const [theme, setTheme] = useState(reduxDarkTheme ? darkTheme : lightTheme);\n    const [answer1, setAnswer1] = useState([0,0,0,0,0]);\n    const [answer2, setAnswer2] = useState([0,0,0,0,0]);\n    const [answer3, setAnswer3] = useState([0,0,0,0,0]);\n\n\n    function customSetState(emoji,setState){\n\n        switch(emoji){\n            case 'hated': \n                {setState([1,0,0,0,0]); break;}\n\n            case 'didnt_enjoyed': \n                {setState([0,1,0,0,0]); break;}\n\n            case 'ok': \n                {setState([0,0,1,0,0]); break;}\n\n            case 'enjoyed': \n                {setState([0,0,0,1,0]); break;}\n\n            case 'really_enjoyed': \n                {setState([0,0,0,0,1]); break;}\n        }   \n    }\n\n    function vote(question, emoji){\n\n        switch(question){\n\n            case 'question_1':{ customSetState(emoji, setAnswer1); break; }\n            case 'question_2':{ customSetState(emoji, setAnswer2); break; }\n            case 'question_3':{ customSetState(emoji, setAnswer3); break; }\n            \n        }\n    }\n\n    return(\n        \n        <ThemeProvider theme={theme}>\n\n            <div className='App'>\n                <GlobalStyled/>\n\n                <Container_global >\n                   \n                    <Title>Classifique o mapa abaixo:</Title>\n\n                    <Mapa/>\n\n                        <Container_questions theme={lightTheme}>\n\n\n                                <Question > \n                                    questao_\n                                </Question>\n\n                                <Container_emojis>\n\n                                    <Emoji_hated \n                                        selected={Boolean(answer1[0])} \n                                        onClick={() => vote('question_1','hated')}\n                                    />\n\n                                    <Emoji_didnt_enjoyed \n                                        selected={Boolean(answer1[1])} \n                                        onClick={() => vote('question_1','didnt_enjoyed')}\n                                    />\n\n                                    <Emoji_ok \n                                        selected={Boolean(answer1[2])} \n                                        onClick={() => vote('question_1','ok')}\n                                    />\n\n                                    <Emoji_enjoyed \n                                        selected={Boolean(answer1[3])} \n                                        onClick={() => vote('question_1','enjoyed')}\n                                    />\n\n                                    <Emoji_really_enjoyed\n                                        selected={Boolean(answer1[4])} \n                                        onClick={() => vote('question_1','really_enjoyed')}\n                                    />\n\n                                </Container_emojis>\n\n                                <Question > \n                                    FÃ¡cil ou difÃ­cil de entender ?\n                                </Question>\n\n                                <Container_emojis>\n\n                                    <Emoji_hated \n                                        selected={Boolean(answer2[0])} \n                                        onClick={() => vote('question_2','hated')}\n                                    />\n\n                                    <Emoji_didnt_enjoyed \n                                        selected={Boolean(answer2[1])} \n                                        onClick={() => vote('question_2','didnt_enjoyed')}\n                                    />\n\n                                    <Emoji_ok \n                                        selected={Boolean(answer2[2])} \n                                        onClick={() => vote('question_2','ok')}\n                                    />\n\n                                    <Emoji_enjoyed \n                                        selected={Boolean(answer2[3])} \n                                        onClick={() => vote('question_2','enjoyed')}\n                                    />\n\n                                    <Emoji_really_enjoyed\n                                        selected={Boolean(answer2[4])} \n                                        onClick={() => vote('question_2','really_enjoyed')}\n                                    />\n\n                                </Container_emojis>\n\n                                <Question > \n                                    bonito ou feio?\n                                </Question>\n\n                                <Container_emojis>\n\n                                    <Emoji_hated \n                                        selected={Boolean(answer3[0])} \n                                        onClick={() => vote('question_3','hated')}\n                                    />\n\n                                    <Emoji_didnt_enjoyed \n                                        selected={Boolean(answer3[1])} \n                                        onClick={() => vote('question_3','didnt_enjoyed')}\n                                    />\n\n                                    <Emoji_ok \n                                        selected={Boolean(answer3[2])} \n                                        onClick={() => vote('question_3','ok')}\n                                    />\n\n                                    <Emoji_enjoyed \n                                        selected={Boolean(answer3[3])} \n                                        onClick={() => vote('question_3','enjoyed')}\n                                    />\n\n                                    <Emoji_really_enjoyed\n                                        selected={Boolean(answer3[4])} \n                                        onClick={() => vote('question_3','really_enjoyed')}\n                                    />\n\n                                </Container_emojis>\n\n                        </Container_questions>\n            \n                        <Container_button>\n                            <Link to={'/'}>\n                                <button>Continuar</button>\n                            </Link>\n                        </Container_button>\n\n                    </Container_global>\n\n            </div>\n\n        </ThemeProvider>\n    )\n}\n\nexport default QualitativeQuestions;","/home/italo/projetos/questionario/src/Pages/QualitativeQuestions/styles.js",["142"],"import { color } from 'd3';\nimport styled from 'styled-components';\nimport goias_fixo from '../../Maps/goias_fixo.png'\n\nimport hated from '../../Images/hated.png';\nimport didnt_enjoyed from '../../Images/didnt_enjoyed.png';\nimport ok from '../../Images/ok.png';\nimport enjoyed from '../../Images/enjoyed.png';\nimport really_enjoyed from '../../Images/really_enjoyed.png';\n\nimport hated_grey from '../../Images/hated_grey.png';\nimport didnt_enjoyed_grey from '../../Images/didnt_enjoyed_grey.png';\nimport ok_grey from '../../Images/ok_grey.png';\nimport enjoyed_grey from '../../Images/enjoyed_grey.png';\nimport really_enjoyed_grey from '../../Images/really_enjoyed_grey.png';\n\n\nexport const Title = styled.h1`\n    margin-left:auto;\n    margin-right:auto;\n    font-weight:700;\n    margin-top:40px;\n    text-align:center;\n`; \n\nexport const Mapa= styled.div`\n    width:100%;\n    height:35vh;\n    min-height:150px;\n    margin-top:2rem;\n    margin-bottom:2rem;\n    background-image: url(${goias_fixo});\n    background-repeat: no-repeat;\n    background-size: contain;\n    background-position: center; \n`;\n\nexport const Container_change= styled.div`\n    width:100vw;\n    height:15vh;\n    display:flex;\n    flex-direction:row;\n    align-items:center;\n    justify-content:space-around;\n    margin-bottom:auto;\n`;\n\nexport const Button_light_theme = styled.div`\n    width:70px;\n    height:70px;\n    border-radius:100px;\n    border: 5px solid lightgray;\n    background:#FFF;\n`;\n\nexport const Button_dark_theme = styled(Button_light_theme)`\n    background:#363537;\n    border-color:darkgray;\n\n`;\n\nexport const Question = styled.text`\n    width:80%;\n \n    \n\n    text-decoration:none;\n    font-size:1.2rem;\n    \n    @media( min-width: 800px){\n        margin-left:25%;\n    }\n\n`;\n\nexport const Container_questions = styled.div`\n    width:100%;\n    margin-bottom:4vh;\n    display:flex;\n    flex-direction:column;\n    color: ${props => props.theme.text};\n    align-items:center;\n\n \n\n    @media( min-width: 800px){\n        width:35%;\n    }\n`;\n\nexport const Container_emojis = styled.div`\n    width:100%;\n    height:auto;\n    margin-top:5px;\n    margin-bottom:5vh;\n    display:flex;\n    justify-content:space-between;\n    flex-direction:row;\n    padding-left:10%;\n    padding-right:10%;\n\n    @media( min-width: 800px){\n        width:75%;\n    }\n`;\n\nexport const Emoji_hated = styled.div`\n    background-image: url(${props => props.selected === true ? hated : hated_grey});\n    background-repeat:no-repeat;\n    background-size:25px;\n    width:25px;\n    height:25px;\n`;\n\nexport const Emoji_didnt_enjoyed = styled(Emoji_hated)`\n    background-image: url(${props => props.selected === true ? didnt_enjoyed : didnt_enjoyed_grey});\n`;\n\nexport const Emoji_ok = styled(Emoji_hated)`\n    background-image: url(${props => props.selected === true ? ok : ok_grey });\n`;\n\nexport const Emoji_enjoyed = styled(Emoji_hated)`\n    background-image: url(${props => props.selected === true ? enjoyed : enjoyed_grey });\n`;\n\nexport const Emoji_really_enjoyed = styled(Emoji_hated)`\n    background-image: url(${props => props.selected === true ? really_enjoyed : really_enjoyed_grey });\n`;\n\nexport const Container = styled.div`\n    width:100%;\n    height:auto;\n    margin-left:auto;\n    margin-right:auto;\n    display:flex;\n    flex-direction:column;\n\n\n    @media( min-width: 800px){\n        width:60vw;\n    }\n\n    @media( min-width: 1024px){\n        width:40vw;\n    }\n`;\n\nexport const Container_button = styled(Container)`\n    width:100%;\n    margin-top:auto;\n    height:auto;\n\n\n    @media( min-width: 800px){\n        margin-bottom:5vh;\n        width:25%;\n    }\n`;\n\nexport const Container_global = styled.div`\n    width:100vw;\n    height:100vh;\n    margin:0;\n    padding:0;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n\n`;","/home/italo/projetos/questionario/src/Store/index.js",[],"/home/italo/projetos/questionario/src/Components/Select/Select.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"143","replacedBy":"147"},{"ruleId":"145","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"153","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":13},{"ruleId":"149","severity":1,"message":"154","line":15,"column":10,"nodeType":"151","messageId":"152","endLine":15,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":42,"column":13,"nodeType":"157","endLine":42,"endColumn":31},{"ruleId":"155","severity":1,"message":"158","line":100,"column":17,"nodeType":"157","endLine":100,"endColumn":35},{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"159","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":20,"column":17,"nodeType":"157","endLine":20,"endColumn":35},{"ruleId":"155","severity":1,"message":"160","line":28,"column":21,"nodeType":"157","endLine":28,"endColumn":40},{"ruleId":"155","severity":1,"message":"161","line":30,"column":25,"nodeType":"157","endLine":38,"endColumn":31},{"ruleId":"155","severity":1,"message":"162","line":40,"column":25,"nodeType":"157","endLine":48,"endColumn":31},{"ruleId":"155","severity":1,"message":"158","line":51,"column":21,"nodeType":"157","endLine":51,"endColumn":39},{"ruleId":"163","severity":1,"message":"164","line":21,"column":1,"nodeType":"165","messageId":"166","endLine":29,"endColumn":7},{"ruleId":"149","severity":1,"message":"167","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":16},{"ruleId":"149","severity":1,"message":"168","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":23},{"ruleId":"149","severity":1,"message":"169","line":8,"column":22,"nodeType":"151","messageId":"152","endLine":8,"endColumn":33},{"ruleId":"149","severity":1,"message":"170","line":13,"column":19,"nodeType":"151","messageId":"152","endLine":13,"endColumn":27},{"ruleId":"155","severity":1,"message":"156","line":34,"column":17,"nodeType":"157","endLine":34,"endColumn":36},{"ruleId":"155","severity":1,"message":"160","line":42,"column":17,"nodeType":"157","endLine":42,"endColumn":35},{"ruleId":"155","severity":1,"message":"171","line":43,"column":22,"nodeType":"157","endLine":45,"endColumn":76},{"ruleId":"155","severity":1,"message":"171","line":60,"column":21,"nodeType":"157","endLine":62,"endColumn":76},{"ruleId":"155","severity":1,"message":"171","line":76,"column":21,"nodeType":"157","endLine":78,"endColumn":76},{"ruleId":"155","severity":1,"message":"172","line":95,"column":17,"nodeType":"157","endLine":95,"endColumn":33},{"ruleId":"155","severity":1,"message":"158","line":104,"column":17,"nodeType":"157","endLine":104,"endColumn":35},{"ruleId":"149","severity":1,"message":"170","line":13,"column":19,"nodeType":"151","messageId":"152","endLine":13,"endColumn":27},{"ruleId":"149","severity":1,"message":"173","line":16,"column":11,"nodeType":"151","messageId":"152","endLine":16,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":35,"column":13,"nodeType":"157","endLine":35,"endColumn":31},{"ruleId":"155","severity":1,"message":"174","line":42,"column":17,"nodeType":"157","endLine":42,"endColumn":52},{"ruleId":"155","severity":1,"message":"175","line":44,"column":17,"nodeType":"157","endLine":44,"endColumn":40},{"ruleId":"155","severity":1,"message":"175","line":56,"column":17,"nodeType":"157","endLine":56,"endColumn":40},{"ruleId":"155","severity":1,"message":"158","line":70,"column":17,"nodeType":"157","endLine":70,"endColumn":35},{"ruleId":"149","severity":1,"message":"176","line":22,"column":8,"nodeType":"151","messageId":"152","endLine":22,"endColumn":13},{"ruleId":"149","severity":1,"message":"170","line":28,"column":19,"nodeType":"151","messageId":"152","endLine":28,"endColumn":27},{"ruleId":"177","severity":1,"message":"178","line":36,"column":9,"nodeType":"179","messageId":"180","endLine":51,"endColumn":10},{"ruleId":"177","severity":1,"message":"178","line":56,"column":9,"nodeType":"179","messageId":"180","endLine":62,"endColumn":10},{"ruleId":"155","severity":1,"message":"156","line":72,"column":17,"nodeType":"157","endLine":72,"endColumn":36},{"ruleId":"155","severity":1,"message":"174","line":78,"column":25,"nodeType":"157","endLine":78,"endColumn":65},{"ruleId":"155","severity":1,"message":"181","line":85,"column":33,"nodeType":"157","endLine":85,"endColumn":51},{"ruleId":"155","severity":1,"message":"182","line":87,"column":37,"nodeType":"157","endLine":90,"endColumn":39},{"ruleId":"155","severity":1,"message":"183","line":92,"column":37,"nodeType":"157","endLine":95,"endColumn":39},{"ruleId":"155","severity":1,"message":"184","line":97,"column":37,"nodeType":"157","endLine":100,"endColumn":39},{"ruleId":"155","severity":1,"message":"185","line":102,"column":37,"nodeType":"157","endLine":105,"endColumn":39},{"ruleId":"155","severity":1,"message":"186","line":107,"column":37,"nodeType":"157","endLine":110,"endColumn":39},{"ruleId":"155","severity":1,"message":"181","line":118,"column":33,"nodeType":"157","endLine":118,"endColumn":51},{"ruleId":"155","severity":1,"message":"182","line":120,"column":37,"nodeType":"157","endLine":123,"endColumn":39},{"ruleId":"155","severity":1,"message":"183","line":125,"column":37,"nodeType":"157","endLine":128,"endColumn":39},{"ruleId":"155","severity":1,"message":"184","line":130,"column":37,"nodeType":"157","endLine":133,"endColumn":39},{"ruleId":"155","severity":1,"message":"185","line":135,"column":37,"nodeType":"157","endLine":138,"endColumn":39},{"ruleId":"155","severity":1,"message":"186","line":140,"column":37,"nodeType":"157","endLine":143,"endColumn":39},{"ruleId":"155","severity":1,"message":"181","line":151,"column":33,"nodeType":"157","endLine":151,"endColumn":51},{"ruleId":"155","severity":1,"message":"182","line":153,"column":37,"nodeType":"157","endLine":156,"endColumn":39},{"ruleId":"155","severity":1,"message":"183","line":158,"column":37,"nodeType":"157","endLine":161,"endColumn":39},{"ruleId":"155","severity":1,"message":"184","line":163,"column":37,"nodeType":"157","endLine":166,"endColumn":39},{"ruleId":"155","severity":1,"message":"185","line":168,"column":37,"nodeType":"157","endLine":171,"endColumn":39},{"ruleId":"155","severity":1,"message":"186","line":173,"column":37,"nodeType":"157","endLine":176,"endColumn":39},{"ruleId":"155","severity":1,"message":"158","line":182,"column":25,"nodeType":"157","endLine":182,"endColumn":43},{"ruleId":"149","severity":1,"message":"187","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":15},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],["188"],["189"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'string' is defined but never used.","react/jsx-pascal-case","Imported JSX component Container_global must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Container_button must be in PascalCase or SCREAMING_SNAKE_CASE","'Container' is defined but never used.","Imported JSX component Container_change must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Button_light_theme must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Button_dark_theme must be in PascalCase or SCREAMING_SNAKE_CASE","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ReactDOM' is defined but never used.","'BrowserRouter' is defined but never used.","'useDispatch' is defined but never used.","'setTheme' is assigned a value but never used.","Imported JSX component Color_scheme must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Container_text must be in PascalCase or SCREAMING_SNAKE_CASE","'dispatch' is assigned a value but never used.","Imported JSX component Container_questions must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Container_2_questions must be in PascalCase or SCREAMING_SNAKE_CASE","'teste' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Imported JSX component Container_emojis must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Emoji_hated must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Emoji_didnt_enjoyed must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Emoji_ok must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Emoji_enjoyed must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Emoji_really_enjoyed must be in PascalCase or SCREAMING_SNAKE_CASE","'color' is defined but never used.","no-global-assign","no-unsafe-negation"]